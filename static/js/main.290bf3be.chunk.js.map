{"version":3,"sources":["redux/common.js","api/api.js","redux/UserInfo.js","redux/Buddies.js","reducers.js","store.js","pages/Home/Home.js","components/LoginSignup/LoginSignup.js","pages/Landing/Landing.js","components/App/App.js","components/Buddy/Buddy.js","components/BuddyList/BuddyList.js","components/Dashboard/Dashboard.js","components/Interaction/Interaction.js","components/InteractionList/InteractionList.js","components/Header/Header.js","components/Footer/Footer.js","components/PendingBuddy/PendingBuddy.js","components/PendingInteraction/PendingInteraction.js","reportWebVitals.js","index.js"],"names":["createReducer","initialState","actionStateUpdateMap","state","action","type","selectAuthInfo","jwt","user","authentication","user_id","id","asyncStateRequest","pending","asyncStateSuccess","asyncStateFailure","asyncActionStateUpdateMapGenerator","action_name","action_store_key","logic","success_logic","request_logic","failure_logic","asyncActionGenerator","args","dispatch","getState","then","payload","catch","error","BUDDIES_API","getAuthHeader","headers","apiPostCall","endpoint","additionalHeaders","body","a","url","fetch","method","JSON","stringify","response","json","authEndpoint","authApiPostCall","buddiesService","archiveBuddy","archiveInteraction","createBuddy","createInteraction","updateBuddy","updateInteraction","getUserData","userId","data","buddyToInteractionMap","Map","Object","values","interactions","interaction","participants","participantId","has","set","get","push","buddies","login","signup","UserInfoActions","userInfoInitialState","is_authenticated","user_info","email","loginAction","signupAction","userActionGenerator","password","signupActionStateUpdateMap","loginActionStateUpdateMap","userInfoReducer","BuddiesActions","buddiesInitialState","buddyPending","pendingInteractions","getUserDataAction","createBuddyAction","buddiesActionGenerator","createBuddyStateUpdateMap","createInteractionAction","buddyId","getUserDataStateUpdateMap","buddiesActionStateUpdateMap","console","log","buddiesReducer","rootReducer","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","storeGenerator","store","createStore","persistor","persistStore","Home","useDispatch","useEffect","LoginSignup","props","Mode","useState","setEmail","setPassword","confirmPassword","setConfirmPassword","mode","setMode","titleToggle","classNames","className","join","onClick","onSubmit","handleLogin","handleSignup","value","placeholder","onChange","e","target","Landing","signupFieldsValid","includes","preventDefault","elements","loginThunk","signupThunk","App","authenticated","useSelector","Buddy","name","notes","birthday","cadence","last_contacted","buddy_id","BuddyList","handleSubmit","buddyCreationThunk","map","buddyData","Dashboard","keys","length","Interaction","date","particpants","InteractionList","interactionPending","interactionCreationThunk","Header","Footer","PendingBuddy","setName","setNotes","setBirthday","PendingInteraction","setParticipants","setDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.290bf3be.chunk.js","sourcesContent":["// A helper function to create uniform reducers and to avoid switch statements\nexport const createReducer =\n\t(initialState, actionStateUpdateMap) =>\n\t(state = initialState, action) => {\n\t\tif (!(action.type in actionStateUpdateMap)) {\n\t\t\t// Actions are sent to all reducers, so there's no way from a single reducer\n\t\t\t// to tell that you've missed the reducer\n\t\t\treturn state;\n\t\t} else {\n\t\t\treturn actionStateUpdateMap[action.type](state, action);\n\t\t}\n\t};\n\n// Define one place to select authentication information from store\n// I wish I could make it private somehow\nexport const selectAuthInfo = (state) => {\n\treturn {\n\t\tjwt: state.user.authentication.jwt,\n\t\tuser_id: state.user.authentication.id,\n\t};\n};\n\n// Helper methods for reducing asyncStateMethods\nexport const asyncStateRequest = (state) => {\n\tstate.pending = true;\n\treturn state;\n};\n\nexport const asyncStateSuccess = (state) => {\n\tstate.pending = false;\n\treturn state;\n};\n\nexport const asyncStateFailure = (state) => {\n\tstate.pending = false;\n\treturn state;\n};\n\n// Takes in a mapping of actions to the logic that should be done\nexport const asyncActionStateUpdateMapGenerator = (\n\taction_name,\n\taction_store_key,\n\tlogic = {}\n) => {\n\t// TODO: Validate input\n\tconst { success_logic, request_logic, failure_logic } = logic;\n\treturn {\n\t\t[action_name + \"/request\"]: (state, action) => {\n\t\t\tstate[action_store_key] = asyncStateRequest(\n\t\t\t\tstate[action_store_key]\n\t\t\t);\n\t\t\tif (request_logic) {\n\t\t\t\treturn request_logic(state, action);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t},\n\t\t[action_name + \"/success\"]: (state, action) => {\n\t\t\tstate[action_store_key] = asyncStateSuccess(\n\t\t\t\tstate[action_store_key]\n\t\t\t);\n\t\t\tif (success_logic) {\n\t\t\t\treturn success_logic(state, action);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t},\n\t\t[action_name + \"/failure\"]: (state, action) => {\n\t\t\tstate[action_store_key] = asyncStateFailure(\n\t\t\t\tstate[action_store_key]\n\t\t\t);\n\t\t\tif (failure_logic) {\n\t\t\t\treturn failure_logic(state, action);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t},\n\t};\n};\n\nexport const asyncActionGenerator = (\n\taction_name,\n\trequest_logic,\n\tlogic = {}\n) => {\n\tconst { success_logic, failure_logic } = logic;\n\t// TODO: Validate input\n\treturn {\n\t\t[action_name]: (args) => (dispatch, getState) => {\n\t\t\t// Let the redux store know that we are requesting to perform an asynchronous action\n\t\t\tdispatch({ type: action_name + \"/request\" });\n\t\t\trequest_logic(args, dispatch, getState)\n\t\t\t\t.then((payload) => {\n\t\t\t\t\t// Let the redux store know we've been successful, and give the payload to the reducer\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: action_name + \"/success\",\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t});\n\t\t\t\t\t// Allow the user to run a callback on success\n\t\t\t\t\tif (success_logic) {\n\t\t\t\t\t\treturn success_logic(payload, {\n\t\t\t\t\t\t\targs,\n\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\tgetState,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// Let the redux store know we've failed and give the error to the reducer\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: action_name + \"/failure\",\n\t\t\t\t\t\tpayload: error,\n\t\t\t\t\t});\n\t\t\t\t\tif (failure_logic) {\n\t\t\t\t\t\t// Allow the user to run a callback on failure\n\t\t\t\t\t\treturn failure_logic(error, {\n\t\t\t\t\t\t\targs,\n\t\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t\tgetState,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t};\n};\n\n// State that exists for asynchronous actions\nexport const createAsyncActionInitialState = () => {\n\treturn {\n\t\tpending: false,\n\t};\n};\n","// Run the frontend against the prod API\nconst BUDDIES_API = \"https://buddies-backend.herokuapp.com/\";\n\n// Run the frontend against a local instance of the buddies backend\n// const BUDDIES_API = 'http://localhost:9001/';\n\nconst getAuthHeader = (jwt, headers = {}) => {\n\theaders[\"Authorization\"] = \"Bearer \" + jwt;\n\treturn headers;\n};\n\nconst authApiPostCall = (endpoint) => (jwt) => async (body) => {\n\treturn apiPostCall(endpoint)(getAuthHeader(jwt))(body);\n};\n\n// Curried function to share functionality between POST requests. Will be more\n// useful when we add security\nconst apiPostCall =\n\t(endpoint) =>\n\t(additionalHeaders = {}) =>\n\tasync (body) => {\n\t\tconst url = BUDDIES_API + endpoint;\n\t\tadditionalHeaders[\"Content-Type\"] = \"application/json\";\n\t\treturn fetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: additionalHeaders,\n\t\t\tbody: JSON.stringify(body),\n\t\t}).then((response) => {\n\t\t\treturn response.json();\n\t\t});\n\t};\n\nconst getUserData =\n\t(jwt) =>\n\tasync ({ userId }) => {\n\t\tconst headers = getAuthHeader(jwt);\n\n\t\treturn fetch(BUDDIES_API + \"user/\" + userId, {\n\t\t\theaders: headers,\n\t\t\tmethod: \"GET\",\n\t\t}).then((response) => {\n\t\t\treturn response.json().then((data) => {\n\t\t\t\tlet buddyToInteractionMap = new Map();\n\t\t\t\tfor (const interaction of Object.values(data.interactions)) {\n\t\t\t\t\tfor (const participantId of Object.values(\n\t\t\t\t\t\tinteraction.participants\n\t\t\t\t\t)) {\n\t\t\t\t\t\tif (!buddyToInteractionMap.has(participantId)) {\n\t\t\t\t\t\t\tbuddyToInteractionMap.set(participantId, []);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuddyToInteractionMap\n\t\t\t\t\t\t\t.get(participantId)\n\t\t\t\t\t\t\t.push(interaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tbuddies: data.buddies,\n\t\t\t\t\tinteractions: data.interactions,\n\t\t\t\t\tbuddyToInteractionMap: buddyToInteractionMap,\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t};\n\nconst authEndpoint = (endpoint) => (jwt) => authApiPostCall(endpoint)(jwt);\n\n// The main endpoints of the buddy service coupled into one object\n// Checkout https://github.com/BKDaugherty/buddies/blob/main/src/lib/types.rs\n// for the interface\nconst buddiesService = {\n\tarchiveBuddy: authEndpoint(\"buddy/archive\"),\n\tarchiveInteraction: authEndpoint(\"interaction/archive\"),\n\tcreateBuddy: authEndpoint(\"buddy/create\"),\n\tcreateInteraction: authEndpoint(\"interaction/create\"),\n\tupdateBuddy: authEndpoint(\"buddy/update\"),\n\tupdateInteraction: authEndpoint(\"interaction/update\"),\n\tgetUserData: getUserData,\n\tlogin: apiPostCall(\"login\")(),\n\tsignup: apiPostCall(\"sign_up\")(),\n};\n\nexport { buddiesService };\n","import {\n\tcreateReducer,\n\tcreateAsyncActionInitialState,\n\tasyncActionStateUpdateMapGenerator,\n\tasyncActionGenerator,\n} from \"./common\";\nimport { buddiesService } from \"../api\";\n\n// Defines the high level intent of actions that are possible on\n// the user_info slice of the redux store.\nexport const UserInfoActions = {\n\tlogin: \"user/login\",\n\tsignup: \"user/sign_up\",\n};\n\n// Defines the initial state of the user Info slice of the state\nconst userInfoInitialState = {\n\t// State controlling the login intent\n\tlogin: createAsyncActionInitialState(),\n\tsignup: createAsyncActionInitialState(),\n\t// Information related to authentication\n\tauthentication: {\n\t\t// Whether or not the user is authenticated\n\t\tis_authenticated: false,\n\t\t// The JWT of the user for the current session\n\t\tjwt: \"\",\n\t\t// The user's id\n\t\tid: \"\",\n\t},\n\t// Information about the user\n\tuser_info: {\n\t\t// The user's email\n\t\temail: \"\",\n\t},\n};\n\nconst loginAction = asyncActionGenerator(\n\tUserInfoActions.login,\n\t(args, dispatch, getState) => buddiesService.login(args),\n\t{\n\t\tsuccess_logic: (payload, { args, dispatch, getState }) => {},\n\t\tfailure_logic: (error, { args, dispatch, getState }) => {},\n\t}\n);\n\nconst signupAction = asyncActionGenerator(\n\tUserInfoActions.signup,\n\t(args, dispatch, getState) => buddiesService.signup(args),\n\t{\n\t\tsuccess_logic: (payload, { args, dispatch, getState }) => {\n\t\t\t// On sign up success, call login\n\t\t\tconst loginThunk = userActionGenerator[UserInfoActions.login]({\n\t\t\t\temail: args.email,\n\t\t\t\tpassword: args.password,\n\t\t\t});\n\t\t\tdispatch(loginThunk);\n\t\t},\n\t\tfailure_logic: (error, { args, dispatch, getState }) => {},\n\t}\n);\n\nconst signupActionStateUpdateMap = asyncActionStateUpdateMapGenerator(\n\tUserInfoActions.signup,\n\t\"signup\"\n);\n\nconst loginActionStateUpdateMap = asyncActionStateUpdateMapGenerator(\n\tUserInfoActions.login,\n\t\"login\",\n\t{\n\t\tsuccess_logic: (state, action) => {\n\t\t\tstate.authentication.is_authenticated = true;\n\t\t\tstate.authentication.jwt = action.payload.jwt;\n\t\t\tstate.authentication.id = action.payload.user.id;\n\t\t\tstate.user_info.email = action.payload.user.email;\n\t\t\treturn state;\n\t\t},\n\t\trequest_logic: (state, action) => state,\n\t\tfailure_logic: (state, action) => {\n\t\t\tstate.authentication.is_authenticated = false;\n\t\t\treturn state;\n\t\t},\n\t}\n);\n\nexport const userActionGenerator = {\n\t...loginAction,\n\t...signupAction,\n};\n\nexport const userInfoActionStateUpdateMap = {\n\t...loginActionStateUpdateMap,\n\t...signupActionStateUpdateMap,\n};\n\n// Exports the reducer to the root reducers module.\nexport const userInfoReducer = createReducer(\n\tuserInfoInitialState,\n\tuserInfoActionStateUpdateMap\n);\n","import {\n\tcreateReducer,\n\tcreateAsyncActionInitialState,\n\tselectAuthInfo,\n\tasyncActionStateUpdateMapGenerator,\n\tasyncActionGenerator,\n} from \"./common\";\nimport { buddiesService } from \"../api\";\n\n// Defines the high level intent of actions that are possible on\n// the buddies slice of the redux store.\nexport const BuddiesActions = {\n\tgetUserData: \"buddies/get\",\n\tcreateBuddy: \"buddies/create\",\n\tcreateInteraction: \"buddies/create_interaction\",\n\tstartCreateBuddy: \"buddies/start_create\",\n\tstartCreateInteraction: \"buddies/start_create_interaction\",\n\tcompleteCreateInteraction: \"buddies/complete_create_interaction\",\n};\n\nconst buddiesInitialState = {\n\tgetUserData: createAsyncActionInitialState(),\n\t// Dictionary from buddy-id to buddy\n\tbuddies: {},\n\t// Dictionary from interaction-id to interaction\n\tinteractions: {},\n\t// Dictionary from buddy-id to an array of interactions they are associated with\n\tbuddyToInteractionMap: {},\n\t// Whether or not the user is creating a buddy\n\tbuddyPending: false,\n\tcreateBuddy: createAsyncActionInitialState(),\n\t// A map from buddy-id to the pending interaction for that buddy\n\tpendingInteractions: {},\n};\n\nconst getUserDataAction = asyncActionGenerator(\n\tBuddiesActions.getUserData,\n\t(args, dispatch, getState) => {\n\t\tconst { jwt, user_id } = selectAuthInfo(getState());\n\t\treturn buddiesService.getUserData(jwt)({ userId: user_id });\n\t},\n\t{\n\t\tsuccess_logic: (payload, dispatch, getState) => {},\n\t\tfailure_logic: (error, dispatch, getState) => {},\n\t}\n);\n\nconst createBuddyAction = asyncActionGenerator(\n\tBuddiesActions.createBuddy,\n\t(args, dispatch, getState) => {\n\t\tconst { jwt, user_id } = selectAuthInfo(getState());\n\t\t// We are calling the backend directly here. Important\n\t\t// that all keys are snake case\n\t\t// TODO: Add validation to API call to check this somehow?\n\t\treturn buddiesService.createBuddy(jwt)({\n\t\t\tuser_id,\n\t\t\t...args,\n\t\t});\n\t},\n\t{\n\t\tsuccess_logic: (payload, { args, dispatch, getState }) => {\n\t\t\t// After successful creation, refresh user data\n\t\t\tdispatch(buddiesActionGenerator[BuddiesActions.getUserData]());\n\t\t},\n\t\tfailure_logic: (error, { args, dispatch, getState }) => {},\n\t}\n);\n\nconst createBuddyStateUpdateMap = asyncActionStateUpdateMapGenerator(\n\tBuddiesActions.createBuddy,\n\t\"createBuddy\",\n\t{\n\t\tsuccess_logic: (state, action) => {\n\t\t\tstate.buddyPending = false;\n\t\t\treturn state;\n\t\t},\n\t\trequest_logic: (state, action) => {\n\t\t\treturn state;\n\t\t},\n\t\tfailure_logic: (state, action) => {\n\t\t\treturn state;\n\t\t},\n\t}\n);\n\nconst createInteractionAction = asyncActionGenerator(\n\tBuddiesActions.createInteraction,\n\t(args, dispatch, getState) => {\n\t\tconst { jwt, user_id } = selectAuthInfo(getState());\n\t\t// We are calling the backend directly here. Important\n\t\t// that all keys are snake case\n\t\t// TODO: Add validation to API call to check this somehow?\n\t\treturn buddiesService.createInteraction(jwt)({\n\t\t\tuser_id,\n\t\t\t...args,\n\t\t});\n\t},\n\t{\n\t\tsuccess_logic: (payload, { args, dispatch, getState }) => {\n\t\t\t// After successful creation, refresh user data\n\t\t\tdispatch(buddiesActionGenerator[BuddiesActions.getUserData]());\n\t\t\tdispatch({\n\t\t\t\ttype: BuddiesActions.completeCreateInteraction,\n\t\t\t\t// TODO: Find a less brittle way to do this\n\t\t\t\tpayload: { buddyId: args.participants[0] },\n\t\t\t});\n\t\t},\n\t\tfailure_logic: (error, { args, dispatch, getState }) => {},\n\t}\n);\n\nconst createInteractionStateUpdateMap = asyncActionStateUpdateMapGenerator(\n\tBuddiesActions.createInteraction,\n\t\"createInteraction\",\n\t{\n\t\tsuccess_logic: (state, action) => {\n\t\t\treturn state;\n\t\t},\n\t\trequest_logic: (state, action) => {\n\t\t\treturn state;\n\t\t},\n\t\tfailure_logic: (state, action) => {\n\t\t\treturn state;\n\t\t},\n\t}\n);\n\nconst getUserDataStateUpdateMap = asyncActionStateUpdateMapGenerator(\n\tBuddiesActions.getUserData,\n\t\"getUserData\",\n\t{\n\t\tsuccess_logic: (state, action) => {\n\t\t\tstate.buddies = action.payload.buddies;\n\t\t\tstate.interactions = action.payload.interactions;\n\t\t\tstate.buddyToInteractionMap = action.payload.buddyToInteractionMap;\n\t\t\treturn state;\n\t\t},\n\t\trequest_logic: (state, action) => state,\n\t\tfailure_logic: (state, action) => state,\n\t}\n);\n\nexport const buddiesActionStateUpdateMap = {\n\t...getUserDataStateUpdateMap,\n\t...createBuddyStateUpdateMap,\n\t[BuddiesActions.startCreateBuddy]: (state) => {\n\t\tstate.buddyPending = true;\n\t\treturn state;\n\t},\n\t[BuddiesActions.startCreateInteraction]: (state, action) => {\n\t\tconst { buddyId } = action.payload;\n\t\tstate.pendingInteractions[buddyId] = true;\n\t\treturn state;\n\t},\n\t[BuddiesActions.completeCreateInteraction]: (state, action) => {\n\t\tconsole.log(action);\n\t\tconst { buddyId } = action.payload;\n\t\tstate.pendingInteractions[buddyId] = false;\n\t\treturn state;\n\t},\n};\n\nexport const buddiesActionGenerator = {\n\t...getUserDataAction,\n\t...createBuddyAction,\n\t...createInteractionAction,\n};\n\n// Exports the reducer to the root reducers module.\nexport const buddiesReducer = createReducer(\n\tbuddiesInitialState,\n\tbuddiesActionStateUpdateMap,\n\tcreateInteractionStateUpdateMap\n);\n","import { combineReducers } from \"redux\";\nimport { buddiesReducer, userInfoReducer } from \"./redux\";\n\n// Combine all existing reducers into one that will be applied to the store\nconst rootReducer = combineReducers({\n\tbuddies: buddiesReducer,\n\tuser: userInfoReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst persistConfig = {\n\tkey: \"primary\",\n\tstorage,\n\tstateReconciler: autoMergeLevel2,\n};\n\n// On browser refresh, merge stored state in localStorage with the initialState of the root\n// reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composedEnhancer = composeWithDevTools(\n\t// Add thunk middleware to allow for asynchronous dispatch via the store.\n\t// Also, pass every thunk the buddies_service API\n\tapplyMiddleware(thunk)\n);\n\nconst storeGenerator = () => {\n\tconst store = createStore(persistedReducer, composedEnhancer);\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport default storeGenerator;\n","import React, { Fragment, useEffect } from \"react\";\nimport { Dashboard, BuddyList } from \"../../components\";\nimport { useDispatch } from \"react-redux\";\nimport { buddiesActionGenerator, BuddiesActions } from \"../../redux/Buddies\";\n\nexport const Home = () => {\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tconst getUserData =\n\t\t\tbuddiesActionGenerator[BuddiesActions.getUserData]();\n\t\tdispatch(getUserData);\n\t}, [dispatch]);\n\treturn (\n\t\t<Fragment>\n\t\t\t<Dashboard />\n\t\t\t<BuddyList />\n\t\t</Fragment>\n\t);\n};\n","import React, { useState } from \"react\";\n\nexport const LoginSignup = (props) => {\n\tconst Mode = {\n\t\tLOGIN: \"login\",\n\t\tSIGNUP: \"signup\",\n\t};\n\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [mode, setMode] = useState(Mode.LOGIN);\n\n\tconst titleToggle = (type) => {\n\t\tlet classNames = [\"title\"];\n\t\ttype === mode && classNames.push(\"active\");\n\t\treturn (\n\t\t\t<h3 className={classNames.join(\" \")} onClick={() => setMode(type)}>\n\t\t\t\t{type}\n\t\t\t</h3>\n\t\t);\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={\n\t\t\t\tmode === Mode.LOGIN ? props.handleLogin : props.handleSignup\n\t\t\t}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{titleToggle(Mode.LOGIN)}\n\t\t\t\t{titleToggle(Mode.SIGNUP)}\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tclassName={\"field\"}\n\t\t\t\ttype=\"email\"\n\t\t\t\tvalue={email}\n\t\t\t\tplaceholder={\"email\"}\n\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName={\"field\"}\n\t\t\t\ttype=\"password\"\n\t\t\t\tvalue={password}\n\t\t\t\tplaceholder={\"password\"}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t/>\n\t\t\t{mode === Mode.SIGNUP && (\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tplaceholder={\"confirm password\"}\n\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<input className={\"button\"} type=\"submit\" value=\"submit\" />\n\t\t</form>\n\t);\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userActionGenerator, UserInfoActions } from \"../../redux/UserInfo\";\nimport { LoginSignup } from \"../../components/LoginSignup\"\n\nexport const Landing = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleLogin = (e) => {\n\t\te.preventDefault();\n\n\t\tconst email = e.target.elements[0].value;\n\t\tconst password = e.target.elements[1].value;\n\n\t\tconst loginThunk = userActionGenerator[UserInfoActions.login]({\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\n\t\tdispatch(loginThunk);\n\t};\n\n\tconst handleSignup = (e) => {\n\t\te.preventDefault();\n\n\t\tconst email = e.target.elements[0].value;\n\t\tconst password = e.target.elements[1].value;\n\t\tconst confirmPassword = e.target.elements[2].value;\n\n\t\tif (!signupFieldsValid(email, password, confirmPassword)) {\n\t\t\t// toast that shit\n\t\t\tconsole.log(\"wrong\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst signupThunk = userActionGenerator[UserInfoActions.signup]({\n\t\t\temail,\n\t\t\tpassword,\n\t\t});\n\n\t\tdispatch(signupThunk);\n\t};\n\n\tconst signupFieldsValid = (email, password, confirmPassword) => {\n\t\treturn email.includes(\"@\") && password === confirmPassword;\n\t};\n\n\treturn (\n\t\t<div id={ \"landing\" }>\n\t\t\t<LoginSignup\n\t\t\t\thandleLogin={handleLogin}\n\t\t\t\thandleSignup={handleSignup}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { Home, Landing } from \"../../pages\";\nimport { Header, Footer } from \"..\";\nimport { useSelector } from \"react-redux\";\n\nexport const App = () => {\n\tconst authenticated = useSelector(\n\t\t(state) => state.user.authentication.is_authenticated\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header />\n\t\t\t\t{authenticated ? <Home /> : <Landing />}\n\t\t\t<Footer />\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { InteractionList } from \"..\";\n\nexport const Buddy = (props) => {\n\tconst { name, birthday, cadence, notes, last_contacted, id } = props;\n\treturn (\n\t\t<div className={\"panel buddy\"}>\n\t\t\t<h1>{name}</h1>\n\t\t\t<p>{notes}</p>\n\t\t\t<InteractionList buddy_id={id} />\n\t\t</div>\n\t);\n};\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { buddiesActionGenerator, BuddiesActions } from \"../../redux/Buddies\";\n\nimport { Buddy, PendingBuddy } from \"..\";\n\nexport const BuddyList = () => {\n\tconst dispatch = useDispatch();\n\tconst handleBuddyCreation = (e) => {\n\t\te.preventDefault();\n\t\t// This feels very brittle\n\t\tconst name = e.target.elements[0].value;\n\t\tconst notes = e.target.elements[1].value;\n\t\tconst birthday = e.target.elements[2].value;\n\n\t\tconst buddyCreationThunk = buddiesActionGenerator[\n\t\t\tBuddiesActions.createBuddy\n\t\t]({\n\t\t\tname,\n\t\t\tnotes,\n\t\t\tbirthday,\n\t\t});\n\t\tdispatch(buddyCreationThunk);\n\t};\n\n\tconst buddies = useSelector((state) => state.buddies.buddies);\n\tconst buddyPending = useSelector((state) => state.buddies.buddyPending);\n\treturn (\n\t\t<div className={\"container buddy-list\"}>\n\t\t\t{!buddyPending && (\n\t\t\t\t<button\n\t\t\t\t\tclassName={\"button\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch({ type: BuddiesActions.startCreateBuddy });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCreate Buddy\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{buddyPending && (\n\t\t\t\t<PendingBuddy handleSubmit={handleBuddyCreation} />\n\t\t\t)}\n\t\t\t{Object.values(buddies).map((buddyData) => (\n\t\t\t\t<Buddy key={buddyData.id} {...buddyData} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const Dashboard = () => {\n\tconst user_info = useSelector((state) => state.user.user_info);\n\tconst buddies = useSelector((state) => state.buddies.buddies);\n\tconst interactions = useSelector((state) => state.buddies.interactions);\n\n\treturn (\n\t\t<div className={\"container dashboard\"}>\n\t\t\t<div className={\"panel half\"}>\n\t\t\t\t<p>profile</p>\n\t\t\t\t<h1>{user_info.email}</h1>\n\t\t\t</div>\n\t\t\t<div className={\"panel quarter\"}>\n\t\t\t\t<p>buddies</p>\n\t\t\t\t<h1>{Object.keys(buddies).length}</h1>\n\t\t\t</div>\n\t\t\t<div className={\"panel quarter\"}>\n\t\t\t\t<p>interactions</p>\n\t\t\t\t<h1>{Object.keys(interactions).length}</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { Fragment } from \"react\";\n\nexport const Interaction = (props) => {\n\tconst { notes, date, particpants } = props;\n\treturn (\n\t\t<Fragment>\n\t\t\t<h4>{date}</h4>\n\t\t\t<p>{notes}</p>\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { buddiesActionGenerator, BuddiesActions } from \"../../redux/Buddies\";\nimport { Interaction, PendingInteraction } from \"..\";\n\nexport const InteractionList = (props) => {\n\tconst dispatch = useDispatch();\n\tconst { buddy_id } = props;\n\n\tconst interactionPending = useSelector((state) => {\n\t\tif (buddy_id in state.buddies.pendingInteractions) {\n\t\t\treturn state.buddies.pendingInteractions[buddy_id];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\n\n\tconst interactions = useSelector((state) =>\n\t\tstate.buddies.buddyToInteractionMap.get(buddy_id)\n\t);\n\n\tconst handleCreateInteraction = (buddyId) => (e) => {\n\t\te.preventDefault();\n\t\t// This feels very brittle\n\t\tconst notes = e.target.elements[0].value;\n\t\tconst other_participants = e.target.elements[1].value;\n\t\t// Ignore other_particpants for now since it's not setup\n\t\tconst participants = [buddyId]; //+ other_particpants\n\t\tconst date = e.target.elements[2].value;\n\n\t\tconst interactionCreationThunk = buddiesActionGenerator[\n\t\t\tBuddiesActions.createInteraction\n\t\t]({\n\t\t\tnotes,\n\t\t\tparticipants,\n\t\t\tdate,\n\t\t});\n\t\tdispatch(interactionCreationThunk);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{!interactionPending && (\n\t\t\t\t<button\n\t\t\t\t\tclassName={\"button\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: BuddiesActions.startCreateInteraction,\n\t\t\t\t\t\t\tpayload: { buddyId: buddy_id },\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCreate Interaction\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{interactionPending && (\n\t\t\t\t<PendingInteraction\n\t\t\t\t\thandleSubmit={handleCreateInteraction(buddy_id)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{interactions &&\n\t\t\t\tinteractions.map((interaction) => (\n\t\t\t\t\t<Interaction key={interaction.id} {...interaction} />\n\t\t\t\t))}\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\"\n\nexport const Header = () => {\n\tconst { user_info, authentication } = useSelector(state => state.user);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div id={\"header\"}>\n\t\t\t\t<div className={\"container header centered\"}>\n\t\t\t\t\t<h2>buddies.</h2>\n\t\t\t\t\t{ authentication.is_authenticated ? <p>hi, {user_info.email}!</p> : false }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\n\nexport const Footer = () => {\n\treturn <Fragment />;\n};\n","import React, { useState } from \"react\";\n\nexport const PendingBuddy = (props) => {\n\tconst [name, setName] = useState(\"\");\n\tconst [notes, setNotes] = useState(\"\");\n\tconst [birthday, setBirthday] = useState(\"\");\n\treturn (\n\t\t<div className={\"panel buddy\"}>\n\t\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tplaceholder={\"name\"}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={notes}\n\t\t\t\t\tplaceholder={\"notes\"}\n\t\t\t\t\tonChange={(e) => setNotes(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={birthday}\n\t\t\t\t\tplaceholder={\"10-02-1997\"}\n\t\t\t\t\tonChange={(e) => setBirthday(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input className={\"button\"} type=\"submit\" value=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\n\nexport const PendingInteraction = (props) => {\n\tconst [notes, setNotes] = useState(\"\");\n\tconst [participants, setParticipants] = useState(\"\");\n\tconst [date, setDate] = useState(\"\");\n\treturn (\n\t\t<div classNames={\"panel buddy\"}>\n\t\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={notes}\n\t\t\t\t\tplaceholder={\"notes\"}\n\t\t\t\t\tonChange={(e) => setNotes(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={participants}\n\t\t\t\t\tplaceholder={\"participants\"}\n\t\t\t\t\tonChange={(e) => setParticipants(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"field\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={date}\n\t\t\t\t\tplaceholder={\"08-24-2021\"}\n\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input className={\"button\"} type=\"submit\" value=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport storeGenerator from \"./store\";\nimport { App } from \"./components\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/styles.scss\";\n\nconst { store, persistor } = storeGenerator();\n\nconsole.log(persistor);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}